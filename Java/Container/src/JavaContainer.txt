1) Collection：
一个独立元素的序列，这些元素都服从一条或者多条规则。 List必须按照插入的顺序保存元素，而set不能有重复的元素。Queue按照排队规则来确定对象产生的顺序（通常与它们被插入的顺序相同）。
2) Map：
一组成对的“键值对”对象，允许你使用键来查找值。

* structure

|Collection
|　　├List
|　　│-├LinkedList
|　　│-├ArrayList
|　　│-└Vector
|　　│　└Stack
|　　├Set
|　　│├HashSet
|　　│├TreeSet
|　　│└LinkedSet
|
|Map
　　├Hashtable
　　├HashMap
　　└WeakHashMap

1) Collection API
boolean add(Object o) // 添加对象到集合
boolean remove(Object o) // 删除指定的对象
int size() // 返回当前集合中元素的数量
boolean contains(Object o) // 查找集合中是否有指定的对象
boolean isEmpty() // 判断集合是否为空
Iterator iterator() // 返回一个迭代器
boolean containsAll(Collection c) // 查找集合中是否有集合c中的元素
boolean addAll(Collection c) // 将集合c中所有的元素添加给该集合
void clear() // 删除集合中所有元素
void removeAll(Collection c) // 从集合中删除c集合中也有的元素
void retainAll(Collection c) // 从集合中删除集合c中不包含的元素

2) Map API
boolean equals(Object o) // 比较对象
boolean remove(Object o) // 删除一个对象
put(Object key,Object value) // 添加key和value